import { supabase } from '@/lib/supabase'; // Ajuste o caminho conforme necessário
import { useRouter } from 'next/navigation';
import { useEffect, useState } from 'react';

export default function DashboardPage() {
  const router = useRouter();
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const checkUserRole = async () => {
      const { data: { user } } = await supabase.auth.getUser();

      if (!user) {
        // Usuário não logado, redirecionar para a página de login
        router.push('/login');
        return;
      }

      // Buscar o perfil do usuário na tabela 'profiles'
      const { data: profile, error } = await supabase
        .from('profiles')
        .select('role')
        .eq('id', user.id)
        .single();

      if (error || !profile || (profile.role !== 'vendedor' && profile.role !== 'administrador')) {
        // Usuário não tem o papel necessário, redirecionar para acesso negado ou login
        console.error('Acesso negado: Usuário não é vendedor ou administrador', error);
        router.push('/acesso-negado'); // Crie uma página para acesso negado
        return;
      }

      setLoading(false);
    };

    checkUserRole();
  }, [router]);

  if (loading) {
    return <div className="flex justify-center items-center h-screen text-white">Carregando...</div>; // Ou um spinner de carregamento
  }

  return (
    <div>
      {/* Conteúdo da página Dashboard */}
      <h1>Bem-vindo ao Dashboard!</h1>
      <p>Este conteúdo é restrito a vendedores e administradores.</p>
      {/* ... seu código existente para o dashboard ... */}
    </div>
  );
}
